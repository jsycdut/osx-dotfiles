#========================================================
#                jsy's tmux configuration file
#           _             _                        
#          (_)___ _   _  | |_ _ __ ___  _   ___  __
#          | / __| | | | | __| '_ ` _ \| | | \ \/ /
#          | \__ \ |_| | | |_| | | | | | |_| |>  < 
#         _/ |___/\__, |  \__|_| |_| |_|\__,_/_/\_\
#        |__/     |___/                            
#========================================================

# ✓  is the ok symbol in vim digraphs, use <C-k>OK to insert it.
# ▷  can be typed with <C-k>Tr, use command :help digraphs for more available symbols.
#    if your vim or neovim is not compiled with digraphs feature, you may not
#    be able to use these symbols.

# you'd better read the manual first, or you may get confused by the options. see FORMATS and STYLES section carefully

# ✓ colors definition
# shorthand explaintion
# bg => background
# fg => foreground
# sb => status bar
# l => left
# r => right
# cw => current_window

# backgroud, use default to make it same style with your terminal
sb_bg="default"
sb_l_bg="#default"
sb_r_bg="#default"

# foreground
sb_fg="#b6b8b6"
sb_l_fg="#e0bfd5"
sb_r_fg="#e6ebe6"
cw_fg="cyan"
prefix_fg="#f516bd"
zoom_in_fg="#22f530"
zoom_out_fg="#c3c9c9"

# ✓ index
set -g base-index 1
setw -g pane-base-index 1
set-option -sa terminal-overrides ',xterm-256color:RGB'
setw -g xterm-keys on
set-window-option -g mode-keys vi # vi key
set -g display-panes-time 10000

# ✓ rename
set -g renumber-windows on
setw -g automatic-rename on

# ✓ prefix
unbind C-b
unbind C-a
set -g prefix C-a

# ✓ resize panes
bind -r H resize-pane -L 5
bind -r L resize-pane -R 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5

# ✓ move to previous and next window
bind -r C-h previous-window
bind -r C-l next-window  

# ✓ split window, funny config using ' && "
bind -r "'" split-window -v -c '#{pane_current_path}'
bind -r '"' split-window -h -c '#{pane_current_path}'
bind -r '+' resize-pane -Z # maxmize current pane and restore
bind -r c command-prompt -p "name it: " "new-window; rename-window '%%'"

# ✓ stauts bar
set -g status on
set -g status-left-length 50
set -g status-right-length 80
set -g status-style "bg=$sb_bg"
set -g status-position bottom
set -g status-interval 1
set -g default-terminal "st-255color"
set-option -g pane-active-border-style fg="#ab3f6a"
set -g escape-time 0

# ▷ left side
set -g status-left "#[bold] 🐶 #S "

# ▷ middle part
set -g window-status-separator ""
set -g window-status-format " #I #W "
set -g window-status-style "bold"
set -g window-status-current-format " #I #W "
set -g window-status-current-style "fg=$cw_fg bold"

# ▷ right side
#set -g status-right "\
##[bg=$sb_r_bg fg=sb_r_fg bold blink]#{?client_prefix, #[fg=$prefix_fg bold]✓ ,}#[fg=$sb_r_fg bold] #[fg=cyan]#(cd #{pane_current_path} && git branch | grep '\*')#[fg=default]|#(acpi | cut -d ',' -f 2) |#(~/.config/tmux/extensions/loadavg.sh) | %m-%d %H:%M:%S #{?window_zoomed_flag,🐦,}"

set -g status-right "\
#[bg=$sb_r_bg fg=sb_r_fg bold blink]#{?client_prefix, #[fg=$prefix_fg bold]✓ ,}#[fg=$sb_r_fg bold] #[fg=cyan]#(~/.config/tmux/extensions/slogan.sh)#{?window_zoomed_flag,🐦,}"

# ✓ config and reload this file start
bind e new-window -n "δ " 'nvim -p ~/.config/tmux/tmux.conf'
bind r source-file ~/.config/tmux/tmux.conf \; display 'reloaded'
bind F12 new-window -n "stmt" -c "$HOME/stmt" 'nvim'\; split-window -v -p 20 -c '#{pane_current_path}'\; split-window -h -c '#{pane_current_path}'


# ✓ move around panes
bind -r h select-pane -L
bind -r l select-pane -R
bind -r j select-pane -D
bind -r k select-pane -U
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

bind C-l send-keys 'C-l' # C-a C-l to clear screen
